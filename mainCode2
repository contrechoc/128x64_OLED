/* nine of  128 x 64 images possible on XIAO


    make bit mode image in photoshop
    copy to GIMP - xbm format
    save in GIMP
    drag file into BBEDIT
    copy paste code into arduino script






*/

#include <Arduino.h>
#include <U8g2lib.h>

#include <Gaussian.h>

#ifdef U8X8_HAVE_HW_SPI
#include <SPI.h>
#endif
#ifdef U8X8_HAVE_HW_I2C
#include <Wire.h>
#endif

U8G2_SSD1306_128X64_NONAME_1_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);   // All Boards without Reset of the Display


   #define testXBM_width 128
#define testXBM_height 64
static unsigned char hear4[] = {
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff,
   0x01, 0xff, 0xf1, 0x8f, 0xc7, 0x3f, 0x1e, 0x80, 0xff, 0xff, 0xff, 0xff,
   0xff, 0x7f, 0x00, 0x7f, 0x00, 0xfc, 0xf1, 0x8f, 0x87, 0x3f, 0x1e, 0x00,
   0xfe, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x3e, 0x00, 0xf8, 0xf1, 0x8f,
   0x07, 0x3f, 0x1e, 0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x3e, 0x1c,
   0x7c, 0xf0, 0xf1, 0x8f, 0x07, 0x3f, 0x1e, 0x7f, 0xf8, 0xff, 0xff, 0xff,
   0xff, 0x1f, 0x7f, 0x1c, 0xff, 0xf0, 0xf1, 0x8f, 0x07, 0x3e, 0x1e, 0xff,
   0xf8, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xfe, 0x1f, 0xff, 0xe1, 0xf1, 0x8f,
   0x07, 0x3e, 0x1e, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xf8, 0x8f,
   0xff, 0xe3, 0xf1, 0x8f, 0x47, 0x3c, 0x1e, 0xff, 0xf1, 0xff, 0xff, 0xff,
   0xff, 0x3f, 0xc0, 0x8f, 0xff, 0xe3, 0xf1, 0x8f, 0x47, 0x38, 0x1e, 0xff,
   0xf1, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x8f, 0xff, 0xe3, 0xf1, 0x8f,
   0xc7, 0x38, 0x1e, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x8c,
   0xff, 0xe3, 0xf1, 0x8f, 0xc7, 0x31, 0x1e, 0xff, 0xf1, 0xff, 0xff, 0xff,
   0xff, 0xff, 0x0f, 0x8c, 0xff, 0xe3, 0xf1, 0x8f, 0xc7, 0x31, 0x1e, 0xff,
   0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x88, 0xff, 0xe3, 0xf1, 0x8f,
   0xc7, 0x23, 0x1e, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0x18,
   0xff, 0xe1, 0xf1, 0x8f, 0xc7, 0x03, 0x1e, 0xff, 0xf1, 0xff, 0xff, 0xff,
   0xff, 0x0f, 0xff, 0x18, 0xfe, 0xf0, 0xe1, 0x87, 0xc7, 0x07, 0x1e, 0xff,
   0xf8, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x7e, 0x18, 0x7c, 0xf0, 0xc3, 0xc3,
   0xc7, 0x0f, 0x1e, 0x7f, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x3c,
   0x00, 0xf8, 0x03, 0xc0, 0xc7, 0x0f, 0x1e, 0x00, 0xfc, 0xff, 0xff, 0xff,
   0xff, 0x3f, 0x00, 0x7e, 0x00, 0xfc, 0x07, 0xe0, 0xc7, 0x1f, 0x1e, 0x00,
   0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0x01, 0xff, 0x1f, 0xf8,
   0xc7, 0x1f, 0x1e, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x7c, 0x7c, 0x3c, 0xf0, 0xf1, 0xc7,
   0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x78, 0x3c,
   0x0c, 0xe0, 0xf1, 0xc7, 0x01, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0x78, 0x3c, 0x8e, 0xc3, 0xe3, 0xe3, 0x00, 0xfc, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x38, 0x38, 0xc6, 0xc7, 0xe3, 0xe3,
   0x78, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x38, 0x39,
   0xfe, 0xc7, 0xe3, 0x63, 0xfc, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0x39, 0x39, 0xff, 0xc1, 0xc7, 0x71, 0xfc, 0xf8, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x31, 0x11, 0x3f, 0xc0, 0xc7, 0x71,
   0x00, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x11, 0x11,
   0x0f, 0xc6, 0x8f, 0x78, 0x00, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0x93, 0x93, 0x87, 0xc7, 0x8f, 0x78, 0xfc, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x93, 0x93, 0xc7, 0xc7, 0x8f, 0x78,
   0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x83, 0x83,
   0xc7, 0xc7, 0x1f, 0xfc, 0xf8, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xc7, 0xc7, 0x87, 0xc3, 0x1f, 0xfc, 0x00, 0xf8, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xc7, 0x0f, 0xc0, 0x3f, 0xfe,
   0x01, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xc7,
   0x1f, 0x8c, 0x3f, 0xfe, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff };

 
static unsigned char hear3[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x01, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x17,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xc0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x7e, 0x00, 0x00, 0x00, 0x08,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e,
   0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00,
   0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x80, 0xe3, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x01, 0x00, 0xa0, 0x17,
   0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x80, 0x01, 0x00, 0x00, 0x00, 0xc0,
   0x03, 0x00, 0xf0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x03,
   0x00, 0x00, 0x00, 0x80, 0x03, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x40, 0x00,
   0x00, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x80, 0x03, 0x00, 0x3f, 0x00,
   0x00, 0x00, 0x40, 0x00, 0x00, 0x38, 0x7e, 0x0c, 0x00, 0x00, 0x00, 0x00,
   0x0f, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x18, 0xc2, 0x08,
   0x00, 0x00, 0x00, 0x00, 0x0e, 0x80, 0x1f, 0x00, 0x00, 0x00, 0x40, 0x00,
   0x00, 0x18, 0x83, 0x00, 0x00, 0xc0, 0xff, 0x01, 0x1c, 0xc0, 0x03, 0x00,
   0x00, 0x00, 0x40, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00, 0xf8, 0xff, 0x07,
   0x3c, 0x40, 0x01, 0x3e, 0x00, 0x00, 0x20, 0x00, 0x00, 0x9c, 0x01, 0x00,
   0x00, 0xe0, 0xfb, 0x1f, 0x3c, 0xe0, 0xc0, 0x3f, 0x00, 0x00, 0x20, 0x00,
   0x00, 0x9c, 0x00, 0x00, 0x00, 0xb0, 0xf8, 0x3f, 0x78, 0x60, 0xf0, 0x30,
   0x00, 0x00, 0x20, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0x40, 0xfc, 0xff,
   0x70, 0x20, 0x38, 0x60, 0x00, 0x00, 0x20, 0x00, 0x00, 0xcc, 0x00, 0x00,
   0x00, 0x20, 0xfc, 0xfc, 0x71, 0x30, 0xfc, 0xc0, 0x00, 0x00, 0x20, 0x00,
   0x00, 0x8c, 0x00, 0x00, 0x00, 0x10, 0x7e, 0xf8, 0x63, 0x18, 0xff, 0x03,
   0x00, 0x00, 0x10, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00, 0x10, 0x3e, 0xf8,
   0x4e, 0x88, 0xbf, 0x43, 0x00, 0x00, 0x10, 0x00, 0x00, 0x0c, 0x3e, 0x40,
   0x00, 0x10, 0x3e, 0xfc, 0x1c, 0xc0, 0x0d, 0x47, 0x00, 0x00, 0x10, 0x00,
   0x00, 0x06, 0x60, 0x60, 0x00, 0x10, 0xfe, 0xfc, 0x38, 0xe0, 0x8c, 0x67,
   0x00, 0x00, 0x10, 0x00, 0x00, 0x06, 0x40, 0x20, 0x00, 0x30, 0xfe, 0xff,
   0x10, 0x70, 0xfc, 0x33, 0x00, 0x00, 0x10, 0x00, 0x00, 0x06, 0x60, 0x10,
   0x00, 0x20, 0xbe, 0x7f, 0x24, 0x30, 0xfc, 0x1b, 0x00, 0x00, 0x10, 0x00,
   0x00, 0x06, 0x30, 0x10, 0x00, 0x20, 0xfc, 0x7f, 0x24, 0x38, 0xfc, 0x0d,
   0x00, 0x00, 0x18, 0x00, 0x00, 0x06, 0x10, 0x18, 0x00, 0xc0, 0xfc, 0x3f,
   0x26, 0x3c, 0xfc, 0x07, 0x00, 0x00, 0x08, 0x00, 0x00, 0x0e, 0x08, 0x0c,
   0x00, 0x80, 0xf9, 0x1f, 0x02, 0xe4, 0xff, 0x00, 0x00, 0x00, 0x08, 0x00,
   0x00, 0x0e, 0x06, 0x07, 0x00, 0x00, 0xfe, 0x8f, 0x01, 0x00, 0x7d, 0x00,
   0x00, 0x00, 0x0c, 0x00, 0x00, 0x0e, 0x82, 0x01, 0x00, 0x00, 0xf0, 0xf9,
   0x00, 0x80, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x0c, 0x02, 0x03,
   0x00, 0x00, 0x00, 0x0f, 0x8c, 0x01, 0x0e, 0x00, 0x00, 0x00, 0x04, 0x00,
   0x00, 0x0c, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x38, 0x00,
   0x00, 0x00, 0x02, 0x00, 0x00, 0x18, 0x0e, 0x18, 0x00, 0x00, 0x00, 0x80,
   0x01, 0x07, 0xe0, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x30, 0x00, 0x70,
   0x00, 0x00, 0x00, 0x80, 0x00, 0x0f, 0x00, 0x06, 0x00, 0x00, 0x01, 0x00,
   0x00, 0x60, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x60, 0x00, 0x16, 0x00, 0x00,
   0x00, 0x00, 0x01, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
   0x00, 0x2c, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x80, 0x07, 0x00,
   0x00, 0x00, 0x00, 0x0c, 0x00, 0x58, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00,
   0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0xa0, 0x01, 0x00,
   0x00, 0xc0, 0x00, 0x30, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x80, 0x01,
   0x00, 0x00, 0x06, 0x00, 0x00, 0x60, 0x00, 0xfc, 0x00, 0x00, 0xf0, 0x00,
   0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x30, 0x00, 0xc6,
   0x01, 0x00, 0xe0, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe2, 0x04,
   0x00, 0x30, 0x00, 0x82, 0x03, 0x00, 0xc0, 0x81, 0x01, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x80, 0x07, 0x00, 0x38, 0x00, 0x02, 0x03, 0x00, 0x80, 0x81,
   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
   0x03, 0x00, 0x80, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x18, 0x00, 0x80, 0x03, 0x00, 0x80, 0xc3, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xc3,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0xf8,
   0x01, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x80, 0xff, 0xff, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x3c,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x03,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00 };
   
 
static unsigned char hear2[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00,
   0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x80, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00,
   0xf0, 0x03, 0x80, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x18, 0xf0, 0x07, 0xf8, 0x07, 0x80, 0x00, 0x74, 0x3c, 0x00, 0x00,
   0x30, 0x00, 0x00, 0x00, 0x00, 0x3c, 0xf0, 0x0f, 0xbc, 0x0f, 0x00, 0x3f,
   0x42, 0x64, 0x02, 0x03, 0x78, 0x00, 0x00, 0x00, 0x00, 0x3e, 0xf0, 0x0f,
   0x1e, 0x0f, 0x00, 0x23, 0x42, 0x42, 0xbe, 0x07, 0x78, 0x00, 0x00, 0x00,
   0x00, 0x3f, 0xf0, 0x07, 0x0e, 0x0f, 0x00, 0x33, 0x6e, 0x62, 0xac, 0x04,
   0x78, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x03, 0xde, 0x07, 0x00, 0x1e,
   0x38, 0x3c, 0xec, 0x04, 0x78, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe0, 0x33,
   0xff, 0x03, 0x00, 0x02, 0x00, 0x00, 0x44, 0x04, 0x78, 0x00, 0x00, 0xf8,
   0x01, 0xff, 0xc1, 0x77, 0xff, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
   0xf8, 0x00, 0x00, 0xfc, 0x03, 0xfe, 0xc1, 0x77, 0x3f, 0x00, 0x00, 0x00,
   0x0f, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xfe, 0x03, 0xfc, 0x83, 0x7f,
   0x1f, 0x70, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x03, 0xfe,
   0x07, 0xe0, 0x03, 0x3f, 0xfe, 0xfe, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00,
   0xf0, 0xc0, 0x07, 0xdf, 0x0f, 0xf0, 0x03, 0x7e, 0xfe, 0xff, 0x00, 0x00,
   0x1e, 0x00, 0x00, 0x00, 0xf0, 0xfd, 0x07, 0xdf, 0x7f, 0xf0, 0x01, 0x7c,
   0xfc, 0x7f, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0xe0, 0xff, 0x07, 0xef,
   0xff, 0xe0, 0x00, 0x38, 0xf0, 0x3f, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
   0xe0, 0xff, 0x03, 0xff, 0xff, 0x00, 0x00, 0x00, 0x80, 0x03, 0x00, 0x00,
   0x3c, 0xfc, 0x00, 0x00, 0xe0, 0xff, 0x00, 0xff, 0x7d, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x7c, 0xfe, 0x03, 0x00, 0xc0, 0x07, 0x00, 0xff,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xff, 0x07, 0x00,
   0xc0, 0x07, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xf8, 0xff, 0x0f, 0x00, 0x80, 0x0f, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xc0, 0x03, 0xf0, 0xcf, 0x0f, 0x00, 0x00, 0x0f, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x07, 0xe0, 0x03, 0x1f, 0x00,
   0x00, 0x1f, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x07,
   0xe0, 0x03, 0x1e, 0x00, 0x00, 0xfe, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xf0, 0x03, 0xc0, 0x03, 0x3e, 0x00, 0x00, 0xfe, 0x0f, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0xc0, 0x03, 0x3c, 0x00,
   0x00, 0xfc, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00,
   0xc0, 0x07, 0x7c, 0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x78, 0x00, 0xc0, 0x07, 0xf8, 0x00, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x7c, 0x00, 0x80, 0x07, 0xf8, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x87, 0x07, 0x3c, 0x80,
   0x03, 0x03, 0x70, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
   0x87, 0x0f, 0x7c, 0xf0, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x80, 0x87, 0x0f, 0xfc, 0xff, 0x07, 0x00, 0x00, 0x00,
   0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x87, 0x0f, 0xf8, 0xff,
   0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x80,
   0x87, 0x1f, 0xf0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x60, 0x00,
   0x00, 0x00, 0xfc, 0x81, 0x87, 0x7f, 0xe0, 0x1f, 0x00, 0x00, 0x00, 0x00,
   0x08, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xfe, 0x83, 0x87, 0xff, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xff, 0x87,
   0xcf, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x00, 0xf0, 0x00,
   0x00, 0x80, 0xff, 0x87, 0xcf, 0xf3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xdc, 0x00, 0xf0, 0x01, 0x0f, 0x80, 0x8f, 0x07, 0xff, 0xe3, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x8e, 0x00, 0xe0, 0xc1, 0x1f, 0xc0, 0x87, 0x07,
   0xfe, 0x03, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x86, 0x00, 0xe0, 0xe1,
   0x1f, 0xc0, 0x87, 0x07, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x01,
   0x82, 0x00, 0xe0, 0xf9, 0x0f, 0xc0, 0x83, 0x07, 0xfc, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xfe, 0x01, 0x82, 0x00, 0xe0, 0xff, 0x03, 0xc0, 0xc3, 0x07,
   0x70, 0x00, 0x00, 0x00, 0x70, 0x00, 0xff, 0x01, 0x44, 0x00, 0xe0, 0xff,
   0x00, 0xc0, 0xe3, 0x03, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x81, 0xcf, 0x01,
   0x7c, 0x00, 0xc0, 0x3f, 0x00, 0xc0, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00,
   0xfe, 0x83, 0xe3, 0x01, 0x18, 0x00, 0xc0, 0x1f, 0xe0, 0xc0, 0xff, 0x00,
   0x00, 0x00, 0x78, 0x00, 0xff, 0xc3, 0xf3, 0x00, 0x00, 0x0e, 0x80, 0x07,
   0xf0, 0x81, 0x7f, 0x00, 0x00, 0x00, 0xfc, 0x80, 0xcf, 0xc3, 0x7f, 0x00,
   0x00, 0x39, 0x80, 0x1f, 0xfc, 0x01, 0x3f, 0x00, 0x00, 0x00, 0xfe, 0xc0,
   0x87, 0xe3, 0x3f, 0x00, 0x80, 0x10, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xfe, 0xc0, 0xef, 0xe3, 0x1f, 0x00, 0xc0, 0x10, 0x00, 0xfe,
   0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0xe0, 0xff, 0xe1, 0x0f, 0x00,
   0x40, 0x10, 0x00, 0xfc, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0xe0,
   0xff, 0xe0, 0x01, 0x18, 0x40, 0x08, 0x00, 0xf8, 0x07, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xfe, 0xe3, 0x3d, 0xe0, 0x03, 0x3c, 0xc0, 0x0c, 0x07, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xe7, 0x01, 0xe0, 0xbf, 0x3f,
   0x80, 0x87, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xef,
   0x03, 0xd8, 0xff, 0x3f, 0x00, 0xc0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xf8, 0xdf, 0x1f, 0x3e, 0xff, 0x1f, 0x00, 0x40, 0x84, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdf, 0xff, 0x3f, 0xfe, 0x0f,
   0x00, 0x40, 0xc6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9f,
   0xff, 0x3f, 0xe0, 0x01, 0x00, 0x40, 0x43, 0x33, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xf0, 0x1f, 0xfe, 0x1f, 0x00, 0x00, 0x00, 0xc0, 0x81, 0x75,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x0f, 0xf0, 0x03, 0x00, 0x00,
   0x00, 0x00, 0x80, 0x5d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x07,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xcc, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xf0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x8c,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00 };

 
static unsigned char hear1[] = {
   0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xf7, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff,
   0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xcb, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xdb, 0xff,
   0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xe7, 0xff,
   0xff, 0xff, 0xbd, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0x3f, 0xf8, 0xff, 0xff, 0xff, 0x3d, 0xff, 0xff, 0x7f, 0x3d, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0x7e, 0xfe,
   0xff, 0xbf, 0x3d, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb9, 0xff, 0xe1,
   0x3f, 0xff, 0xfe, 0xfc, 0xff, 0xdf, 0x9d, 0xe6, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xb9, 0xff, 0xec, 0x3f, 0x7e, 0xff, 0xff, 0xff, 0xe7, 0xdd, 0xf1,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xb5, 0x7f, 0xdf, 0x9f, 0x7e, 0xff, 0xff,
   0xff, 0xf3, 0xcd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8d, 0xbf, 0xbf,
   0xdf, 0x99, 0xff, 0xff, 0xff, 0xff, 0xe9, 0xff, 0xff, 0xdf, 0xff, 0xff,
   0xff, 0x9d, 0xbf, 0x3f, 0xcf, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff,
   0xff, 0xcf, 0xff, 0xff, 0xff, 0xfd, 0xdf, 0x7f, 0xef, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xfd, 0xdf, 0xff,
   0xe4, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff,
   0xff, 0xfe, 0xdf, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff,
   0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xf1, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff,
   0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xfe, 0xbf, 0x1e, 0xf8,
   0xff, 0xfc, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07,
   0xfc, 0x3f, 0x06, 0xe0, 0xff, 0xfc, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff,
   0x7f, 0xf8, 0xff, 0x87, 0xfc, 0x3f, 0x02, 0x80, 0xff, 0xfe, 0xff, 0xff,
   0x1f, 0xff, 0xff, 0xff, 0x1f, 0xe0, 0xff, 0x23, 0xfc, 0x3f, 0x70, 0xc0,
   0x7f, 0xfe, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0x1f, 0xcf, 0xff, 0x71,
   0xfc, 0x3f, 0xf8, 0x07, 0x7f, 0xff, 0xff, 0xff, 0x3f, 0xfe, 0xff, 0xff,
   0xaf, 0xcf, 0xff, 0x79, 0xfd, 0x3f, 0xfc, 0x07, 0x3f, 0xff, 0xff, 0xff,
   0x3f, 0xfe, 0xff, 0xff, 0x8f, 0x8f, 0xff, 0xf8, 0xfc, 0x3f, 0xfe, 0x87,
   0x9f, 0xff, 0xff, 0xff, 0xbf, 0xfc, 0xff, 0xff, 0xcf, 0xcf, 0xff, 0xfc,
   0xfc, 0x3f, 0xfe, 0x87, 0x9f, 0xff, 0xff, 0xff, 0x7f, 0xf8, 0xe0, 0xff,
   0xcf, 0xcf, 0x7f, 0xfc, 0xfc, 0x3f, 0xff, 0xcf, 0xcf, 0xff, 0xff, 0xff,
   0xff, 0x78, 0x80, 0xff, 0xcf, 0xcf, 0x7f, 0xfc, 0xf8, 0x3f, 0xff, 0xff,
   0xc7, 0xff, 0x3f, 0xff, 0xff, 0x70, 0x00, 0xff, 0xef, 0xe7, 0x7f, 0xfe,
   0xf8, 0x3f, 0xff, 0xff, 0xe7, 0xff, 0x4f, 0xff, 0xff, 0x70, 0x1e, 0xfe,
   0xcf, 0xe7, 0x7f, 0xfe, 0xf8, 0x3f, 0xff, 0xff, 0xe3, 0xff, 0xb1, 0xff,
   0xff, 0x21, 0x7f, 0xfc, 0xcf, 0xf3, 0x7f, 0xfe, 0xf2, 0x3f, 0xff, 0xff,
   0xf3, 0xff, 0xbf, 0xff, 0xff, 0x0b, 0xff, 0xf8, 0x0f, 0xf8, 0x7f, 0x7c,
   0xe2, 0x3f, 0xff, 0xff, 0xf1, 0xff, 0xbf, 0xff, 0xff, 0x83, 0xff, 0xf0,
   0x0f, 0xfc, 0x7f, 0x3c, 0x06, 0x3f, 0xff, 0xff, 0xf8, 0xff, 0xdf, 0xff,
   0xff, 0x87, 0xff, 0xf1, 0x1f, 0xff, 0x7f, 0x18, 0x8e, 0x3f, 0xff, 0x7f,
   0xf8, 0xff, 0xef, 0xff, 0xff, 0x87, 0xff, 0xe3, 0x1f, 0xfe, 0xff, 0x04,
   0xff, 0x3f, 0xff, 0x7f, 0xfc, 0xff, 0xef, 0xff, 0xff, 0x0f, 0xff, 0xe7,
   0x3f, 0xfe, 0xf3, 0x81, 0xff, 0x3f, 0xff, 0x3f, 0xfc, 0xff, 0xef, 0xff,
   0xff, 0x1f, 0xff, 0xcf, 0x3f, 0xfc, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xfe, 0xff, 0x37, 0xff, 0xff, 0x5f, 0xfe, 0x9f, 0xff, 0x78, 0xf8, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xfe, 0xff, 0x3f, 0xfe, 0x9f,
   0xff, 0x01, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
   0xff, 0x7f, 0xfc, 0x3f, 0xff, 0x07, 0xfe, 0xff, 0xff, 0xff, 0xff, 0x83,
   0xff, 0xff, 0xff, 0xfe, 0xff, 0x7f, 0xfc, 0x3f, 0xff, 0x9f, 0xff, 0xff,
   0xff, 0xff, 0xff, 0x01, 0xfe, 0xff, 0xff, 0xe6, 0xff, 0xff, 0xf8, 0x7f,
   0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x05, 0xfc, 0xff, 0xff, 0xf0,
   0xff, 0xff, 0xf0, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01,
   0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0x00, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0x00, 0xf8, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xf1, 0xff, 0x01,
   0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xfc,
   0xf9, 0xe5, 0xff, 0x03, 0xf9, 0xff, 0xff, 0xff, 0x7f, 0xfc, 0xe7, 0xff,
   0xf1, 0xff, 0x7f, 0xfc, 0xf4, 0xcd, 0xff, 0x07, 0xfc, 0xff, 0xff, 0xff,
   0x7f, 0xf9, 0xef, 0xff, 0xf5, 0xff, 0x7f, 0xf3, 0xe6, 0x1e, 0xff, 0x9f,
   0xff, 0xff, 0xff, 0xff, 0xbf, 0xfb, 0xff, 0xff, 0x26, 0xff, 0x3f, 0x77,
   0xee, 0x7e, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xf3, 0xff, 0x7f,
   0x8e, 0xff, 0xbf, 0x6f, 0x1f, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xbf, 0xe7, 0x7e, 0x7c, 0xcf, 0xff, 0x9f, 0x4f, 0x3f, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xbf, 0x4f, 0x3c, 0xb3, 0xff, 0xff, 0xdf, 0x1f,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0x1f, 0xc1, 0x87,
   0xff, 0xff, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff };

   







u8g2_uint_t offset;      // current offset for the scrolling text
u8g2_uint_t width;      // pixel width of the scrolling text (must be lesser than 128 unless U8G2_16BIT is defined
const char *text = "SWATCH! "; // scroll this text from right to left





void setup(void) {

  u8g2.begin();
  randomSeed(analogRead(0));
   u8g2.setFlipMode(1);

}

void loop(void) {


  u8g2.setDrawColor(1);

  scrollTextSetUp();

  for (int k = 0; k < 250; k++)
  {
    scrollTextLoop(k);
  }

  int h = random(0, 2);
  u8g2.setDrawColor(h);// Black

  u8g2.firstPage();
  do {

    u8g2.drawXBMP(0, 0, testXBM_width , testXBM_height, hear1);
  } while ( u8g2.nextPage() );

  delay(5000);

  h = random(0, 2);
  u8g2.setDrawColor(h);// Black

  gaussian();

  delay(5000);

  h = random(0, 2);
  u8g2.setDrawColor(h);// Black

  u8g2.firstPage();
  do {

    u8g2.drawXBMP(0, 0, testXBM_width , testXBM_height, hear2);
  } while ( u8g2.nextPage() );


  delay(5000);

  h = random(0, 2);
  u8g2.setDrawColor(h);// Black

  u8g2.firstPage();
  do {

    u8g2.drawXBMP(0, 0, testXBM_width , testXBM_height, hear3);
  } while ( u8g2.nextPage() );

  delay(5000);

    h = random(0, 2);
  u8g2.setDrawColor(h);// Black

  u8g2.firstPage();
  do {

    u8g2.drawXBMP(0, 0, testXBM_width , testXBM_height, hear4);
  } while ( u8g2.nextPage() );

  delay(5000);



}

void gaussian() {

  for (int y = 0; y < random(5); y++)
  {
    do {
      Gaussian myGaussian = Gaussian(random(128), random(64));
      for (int i = 0; i < 500 ; i++)
      {
        double myRandomX = myGaussian.random();
        double myRandomY = myGaussian.random();
        u8g2.drawPixel(myRandomX, myRandomY);
      }
    } while ( u8g2.nextPage() );
    delay(500 + random(5000));
  }

}

void scrollTextSetUp()
{

  u8g2.setFont(u8g2_font_inb30_mr);  // set the target font to calculate the pixel width
  width = u8g2.getUTF8Width(text);    // calculate the pixel width of the text

  u8g2.setFontMode(0);    // enable transparent mode, which is faster


}

void scrollTextLoop(int k)
{

  u8g2_uint_t x;

  u8g2.firstPage();
  do {

    // draw the scrolling text at current offset
    x = offset;
    u8g2.setFont(u8g2_font_inb16_mr);    // set the target font
    do {                // repeated drawing of the scrolling text...
      u8g2.drawUTF8(x, 30, text);     // draw the scolling text
      x += width;           // add the pixel width of the scrolling text
    } while ( x < u8g2.getDisplayWidth() );   // draw again until the complete display is filled

    u8g2.setFont(u8g2_font_inb16_mr);   // draw the current pixel width
    u8g2.setCursor(random(30), 40 + random(20));

    if ( (k / 10) % 4 == 0 )
    { u8g2.setFont(u8g2_font_inb16_mr);
      u8g2.print("  EAR");          // this value must be lesser than 128 unless U8G2_16BIT is set
    }
    else if ( (k / 10) % 4 == 1 )
    {
      u8g2.setFont(u8g2_font_8x13_mr);
      u8g2.print(" hear");
    }
    else if ( (k / 10) % 4 == 2 )
    {
      u8g2.setFont(u8g2_font_profont22_tf);
      u8g2.print("listen");
    }
    else if ( (k / 10) % 4 == 3 )
    {
      u8g2.setFont(u8g2_font_balthasar_titling_nbp_tf);
      u8g2.print(" to text");
    }
  } while ( u8g2.nextPage() );

  offset -= random(3);            // scroll by one pixel
  if ( (u8g2_uint_t)offset < (u8g2_uint_t) - width )
    offset = 0;             // start over again

  //delay(10);              // do some small delay
}

void fontSetter(){

}
